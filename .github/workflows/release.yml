name: Create Release for New Tag

on:
  push:
    tags:
      - 'v*' # This will trigger the workflow for tags like v1.0.0, v2.1.3, etc.

jobs:
  build:
    runs-on: windows-latest # Use a Windows runner for pyinstaller to work correctly on `.exe`
    permissions:
      contents: write # Required for creating and uploading releases

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download and Install GTK3 Runtime
      run: |
        # Download the GTK3 runtime installer
        Invoke-WebRequest -Uri "https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases/download/2022-01-04/gtk3-runtime-3.24.31-2022-01-04-ts-win64.exe" -OutFile "gtk3-runtime-installer.exe"
        
        # Run the installer silently (no user interaction)
        Start-Process -FilePath "gtk3-runtime-installer.exe" -ArgumentList "/S" -Wait
        Remove-Item -Force "gtk3-runtime-installer.exe" # Clean up the installer file

    - name: Copy GTK3 DLL files to release folder
      run: |
        mkdir release
        Copy-Item -Path "C:\Program Files\GTK3-Runtime Win64\bin\*.dll" -Destination release\ -Force

    - name: Set up Python 3.13.2
      uses: actions/setup-python@v2
      with:
        python-version: '3.13.2' # Use Python 3.13.2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r dependencies.txt # Install dependencies from the root directory

    - name: Build Conopida.exe with PyInstaller
      run: |
        pyinstaller --onefile --noconsole Conopida.py

    - name: Add Conopida.exe to release folder
      run: |
        Copy-Item -Path .\dist\Conopida.exe -Destination release\ -Force

    - name: Create Release zip
      run: |
        Copy-Item -Path _backupdir.txt -Destination release\
        Copy-Item -Path _sourcedir.txt -Destination release\
        Compress-Archive -Path release\* -DestinationPath Release.zip

    - name: Create GitHub Release using GitHub CLI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.ref_name }} Release.zip --title "Version ${{ github.ref_name }}" --generate-notes
